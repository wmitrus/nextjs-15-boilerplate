name: Playwright Tests
env:
  LOG_DIR: './logs'
  LOG_LEVEL: 'info'
  FILE_LOG_LEVEL: 'info'
  CONSOLE_LOG_LEVEL: 'info'
  LOG_TO_FILE_PROD: 'false'
  LOG_TO_FILE_DEV: 'false'
  LOGFLARE_INTEGRATION_ENABLED: 'false'
  LOGFLARE_LOG_LEVEL: 'info'
  LOGFLARE_API_KEY: 'dummy'
  LOGFLARE_SOURCE_TOKEN: 'dummy'
  LOGFLARE_ENDPOINT: 'https://logflare.app/api/logs'
  UPSTASH_REDIS_REST_URL: 'https://dummy.upstash.io'
  UPSTASH_REDIS_REST_TOKEN: 'dummy'
  NEXT_PUBLIC_APP_URL: http://localhost:3000
  NODE_ENV: development
on:
  pull_request:
    branches: [main]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-v2
          restore-keys: |
            playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-
            playwright-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Run Playwright tests
        run: pnpm exec playwright test --project=${{ matrix.project }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report/
          retention-days: 30
